/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { ethers, EventFilter, Signer, BigNumber, BigNumberish, PopulatedTransaction } from 'ethers';
import { Contract, ContractTransaction, Overrides, CallOverrides } from '@ethersproject/contracts';
import { BytesLike } from '@ethersproject/bytes';
import { Listener, Provider } from '@ethersproject/providers';
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi';

interface Erc20Interface extends ethers.utils.Interface {
  functions: {
    'allowance(address,address)': FunctionFragment;
    'approve(address,uint256)': FunctionFragment;
    'balanceOf(address)': FunctionFragment;
    'decimals()': FunctionFragment;
    'name()': FunctionFragment;
    'symbol()': FunctionFragment;
    'totalSupply()': FunctionFragment;
    'transfer(address,uint256)': FunctionFragment;
    'transferFrom(address,address,uint256)': FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'allowance', values: [string, string]): string;
  encodeFunctionData(functionFragment: 'approve', values: [string, BigNumberish]): string;
  encodeFunctionData(functionFragment: 'balanceOf', values: [string]): string;
  encodeFunctionData(functionFragment: 'decimals', values?: undefined): string;
  encodeFunctionData(functionFragment: 'name', values?: undefined): string;
  encodeFunctionData(functionFragment: 'symbol', values?: undefined): string;
  encodeFunctionData(functionFragment: 'totalSupply', values?: undefined): string;
  encodeFunctionData(functionFragment: 'transfer', values: [string, BigNumberish]): string;
  encodeFunctionData(
    functionFragment: 'transferFrom',
    values: [string, string, BigNumberish]
  ): string;

  decodeFunctionResult(functionFragment: 'allowance', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'approve', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'balanceOf', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'decimals', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'name', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'symbol', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'totalSupply', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'transfer', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'transferFrom', data: BytesLike): Result;

  events: {
    'Approval(address,address,uint256)': EventFragment;
    'Transfer(address,address,uint256)': EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: 'Approval'): EventFragment;
  getEvent(nameOrSignatureOrTopic: 'Transfer'): EventFragment;
}

export abstract class Erc20 extends Contract {
  abstract connect(signerOrProvider: Signer | Provider | string): this;
  abstract attach(addressOrName: string): this;
  abstract deployed(): Promise<this>;

  abstract on(event: EventFilter | string, listener: Listener): this;
  abstract once(event: EventFilter | string, listener: Listener): this;
  abstract addListener(eventName: EventFilter | string, listener: Listener): this;
  abstract removeAllListeners(eventName: EventFilter | string): this;
  abstract removeListener(eventName: any, listener: Listener): this;

  abstract interface: Erc20Interface;

  abstract functions: {
    allowance(
      _owner: string,
      _delegate: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    'allowance(address,address)'(
      _owner: string,
      _delegate: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    approve(
      _delegate: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'approve(address,uint256)'(
      _delegate: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    balanceOf(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    'balanceOf(address)'(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    decimals(
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    'decimals()'(
      overrides?: CallOverrides
    ): Promise<{
      0: number;
    }>;

    name(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    'name()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    symbol(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    'symbol()'(
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    totalSupply(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    'totalSupply()'(
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    transfer(
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'transfer(address,uint256)'(
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    transferFrom(
      _owner: string,
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    'transferFrom(address,address,uint256)'(
      _owner: string,
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  abstract allowance(
    _owner: string,
    _delegate: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  abstract 'allowance(address,address)'(
    _owner: string,
    _delegate: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  abstract approve(
    _delegate: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  abstract 'approve(address,uint256)'(
    _delegate: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  abstract balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  abstract 'balanceOf(address)'(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  abstract decimals(overrides?: CallOverrides): Promise<number>;

  abstract 'decimals()'(overrides?: CallOverrides): Promise<number>;

  abstract name(overrides?: CallOverrides): Promise<string>;

  abstract 'name()'(overrides?: CallOverrides): Promise<string>;

  abstract symbol(overrides?: CallOverrides): Promise<string>;

  abstract 'symbol()'(overrides?: CallOverrides): Promise<string>;

  abstract totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

  abstract 'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>;

  abstract transfer(
    _receiver: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  abstract 'transfer(address,uint256)'(
    _receiver: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  abstract transferFrom(
    _owner: string,
    _receiver: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  abstract 'transferFrom(address,address,uint256)'(
    _owner: string,
    _receiver: string,
    _value: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  abstract callStatic: {
    allowance(_owner: string, _delegate: string, overrides?: CallOverrides): Promise<BigNumber>;

    'allowance(address,address)'(
      _owner: string,
      _delegate: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(_delegate: string, _value: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    'approve(address,uint256)'(
      _delegate: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    'balanceOf(address)'(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<number>;

    'decimals()'(overrides?: CallOverrides): Promise<number>;

    name(overrides?: CallOverrides): Promise<string>;

    'name()'(overrides?: CallOverrides): Promise<string>;

    symbol(overrides?: CallOverrides): Promise<string>;

    'symbol()'(overrides?: CallOverrides): Promise<string>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(_receiver: string, _value: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    'transfer(address,uint256)'(
      _receiver: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    transferFrom(
      _owner: string,
      _receiver: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;

    'transferFrom(address,address,uint256)'(
      _owner: string,
      _receiver: string,
      _value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  abstract filters: {
    Approval(tokenOwner: string | null, spender: string | null, tokens: null): EventFilter;

    Transfer(from: string | null, to: string | null, tokens: null): EventFilter;
  };

  abstract estimateGas: {
    allowance(_owner: string, _delegate: string, overrides?: CallOverrides): Promise<BigNumber>;

    'allowance(address,address)'(
      _owner: string,
      _delegate: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    approve(_delegate: string, _value: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    'approve(address,uint256)'(
      _delegate: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    balanceOf(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    'balanceOf(address)'(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    decimals(overrides?: CallOverrides): Promise<BigNumber>;

    'decimals()'(overrides?: CallOverrides): Promise<BigNumber>;

    name(overrides?: CallOverrides): Promise<BigNumber>;

    'name()'(overrides?: CallOverrides): Promise<BigNumber>;

    symbol(overrides?: CallOverrides): Promise<BigNumber>;

    'symbol()'(overrides?: CallOverrides): Promise<BigNumber>;

    totalSupply(overrides?: CallOverrides): Promise<BigNumber>;

    'totalSupply()'(overrides?: CallOverrides): Promise<BigNumber>;

    transfer(_receiver: string, _value: BigNumberish, overrides?: Overrides): Promise<BigNumber>;

    'transfer(address,uint256)'(
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    transferFrom(
      _owner: string,
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    'transferFrom(address,address,uint256)'(
      _owner: string,
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  abstract populateTransaction: {
    allowance(
      _owner: string,
      _delegate: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    'allowance(address,address)'(
      _owner: string,
      _delegate: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    approve(
      _delegate: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'approve(address,uint256)'(
      _delegate: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    balanceOf(_owner: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'balanceOf(address)'(_owner: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    decimals(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'decimals()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    name(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'name()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'symbol()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    totalSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    'totalSupply()'(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    transfer(
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'transfer(address,uint256)'(
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    transferFrom(
      _owner: string,
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    'transferFrom(address,address,uint256)'(
      _owner: string,
      _receiver: string,
      _value: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
